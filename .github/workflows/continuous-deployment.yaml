name: Continuous Deployment
on:
  pull_request
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest discover ./tests/unittests
  release:
    name: Tag and release
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: package-version
        run: |
          python setup.py --version
          echo '::set-output name=current-version::$(python setup.py --version)'

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      - name: Publish Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/geriremenyi/forex-miner-thor:${{ steps.package-version.outputs.current-version }}
            ghcr.io/geriremenyi/forex-miner-thor:latest

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.current-version}}
          release_name: ${{ steps.package-version.outputs.current-version}}
          draft: false
          prerelease: false
  deploy:
    name: Deploy
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout IaaC
        uses: actions/checkout@v2
        with:
          repository: geriremenyi/forex-miner-asgard
          ref: master
          path: forex-miner-asgard
          token: ${{ secrets.GH_PAT }}

      - name: Connect to AKS
        working-directory: forex-miner-asgard
        shell: pwsh
        run: |
          ./init.ps1 -ApplicationId "${{ secrets.AZURE_APPLICATION_ID }}" -Secret "${{ secrets.AZURE_SECRET }}" -Tenant "${{ secrets.AZURE_TENANT }}"
          Connect-AKSCluster
      - name: Deploy to AKS
        shell: pwsh
        working-directory: forex-miner-asgard
        run: |
          ./init.ps1
          kubectl create secret docker-registry ghcr-secret --namespace=forex-miner --docker-server=https://ghcr.io/ --docker-username=notneeded --docker-password=${{ secrets.GH_PAT }}
          Deploy-KubernetesResource -ResourceYamlFileName 'volume.yaml' -ResourceFolder '../k8s'
          Deploy-KubernetesResource -ResourceYamlFileName 'app.yaml' -ResourceFolder '../k8s'
          Deploy-KubernetesResource -ResourceYamlFileName 'service.yaml' -ResourceFolder '../k8s'